# -*- coding: utf-8 -*-
"""Submission-Employee-attrition.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17N-g6S2wdWCz9vXkvC-bh-elKisdufPu

# Submission


*  Diwa Prasetyo
*  cdaspro5@gmail.com
*  diwa_prasetyo_ekSz

## Data Understanding

###Dataset ini terdiri dari 34 feature atau kolom seperti berikut:

- EmployeeId - Employee Identifier
- Attrition - Did the employee attrition? (0=no, 1=yes)
- Age - Age of the employee
- BusinessTravel - Travel commitments for the job
- DailyRate - Daily salary
- Department - Employee Department
- DistanceFromHome - Distance from work to home (in km)
- Education - 1-Below College, 2-College, 3-Bachelor, 4-Master,5-Doctor
- EducationField - Field of Education
- EnvironmentSatisfaction - 1-Low, 2-Medium, 3-High, 4-Very High
- Gender - Employee's gender
- HourlyRate - Hourly salary
- JobInvolvement - 1-Low, 2-Medium, 3-High, 4-Very High
- JobLevel - Level of job (1 to 5)
- JobRole - Job Roles
- JobSatisfaction - 1-Low, 2-Medium, 3-High, 4-Very High
- MaritalStatus - Marital Status
- MonthlyIncome - Monthly salary
- MonthlyRate - Mounthly rate
- NumCompaniesWorked - Number of companies worked at
- Over18 - Over 18 years of age?
- OverTime - Overtime?
- PercentSalaryHike - The percentage increase in salary last year
- PerformanceRating - 1-Low, 2-Good, 3-Excellent, 4-Outstanding
- RelationshipSatisfaction - 1-Low, 2-Medium, 3-High, 4-Very High
- StandardHours - Standard Hours
- StockOptionLevel - Stock Option Level
- TotalWorkingYears - Total years worked
- TrainingTimesLastYear - Number of training attended last year
- WorkLifeBalance - 1-Low, 2-Good, 3-Excellent, 4-Outstanding
- YearsAtCompany - Years at Company
- YearsInCurrentRole - Years in the current role
- YearsSinceLastPromotion - Years since the last promotion
- YearsWithCurrManager - Years with the current manager

## Data Preparation

### Install Library yang diperlukan
"""

!pip install pycaret
!pip install shap
!pip install pycaret[analysis]

"""### Import Library yang diperlukan"""

import pandas as pd
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import pycaret
from pycaret.classification import *
print(pycaret.__version__)

df = pd.read_csv('https://raw.githubusercontent.com/dicodingacademy/dicoding_dataset/main/employee/employee_data.csv')

df

"""### Cek Missingg Value"""

df.isnull().sum()

"""### Melakukan pemberisihan missingg value"""

df = df.dropna()
df.isnull().sum()

df.shape

df.to_csv('employee_data.csv', index=False)

"""### Melihat Penyebaran distribusi data"""

default_counts = df['Attrition'].value_counts()
print(default_counts)

clf1 = setup(data = df, target = 'Attrition', fix_imbalance=True)

"""## Modelling"""

best_model = compare_models(['lightgbm',
                            'dt',
                            'et',
                            'xgboost',
                            'rf'])

"""## Evaluation"""

plot_model(best_model, plot = 'confusion_matrix')

interpret_model(best_model)

# Visualisasi hubungan antara Gender dan Attrition
plt.figure(figsize=(10, 6))
sns.countplot(x='OverTime', hue='Attrition', data=df)
plt.title('Attrition by Overtime')
plt.xlabel('Overtime')
plt.ylabel('Count')
plt.legend(title='Attrition')
plt.show()

# Visualisasi hubungan antara Gender dan Attrition
plt.figure(figsize=(10, 6))
sns.countplot(x='MaritalStatus', hue='Attrition', data=df)
plt.title('Attrition by MaritalStatus')
plt.xlabel('MaritalStatus')
plt.ylabel('Count')
plt.legend(title='Attrition')
plt.show()

# Visualisasi hubungan antara Gender dan Attrition
plt.figure(figsize=(10, 6))
sns.countplot(x='TotalWorkingYears', hue='Attrition', data=df)
plt.title('Attrition by TotalWorkingYears')
plt.xlabel('TotalWorkingYears')
plt.ylabel('Count')
plt.legend(title='Attrition')
plt.show()

# Visualisasi hubungan antara Gender dan Attrition
plt.figure(figsize=(10, 6))
sns.countplot(x='BusinessTravel', hue='Attrition', data=df)
plt.title('Attrition by BusinessTravel')
plt.xlabel('BusinessTravel')
plt.ylabel('Count')
plt.legend(title='Attrition')
plt.show()

# Visualisasi hubungan antara Gender dan Attrition
plt.figure(figsize=(10, 6))
sns.countplot(x='JobSatisfaction', hue='Attrition', data=df)
plt.title('Attrition by JobSatisfaction')
plt.xlabel('JobSatisfaction')
plt.ylabel('Count')
plt.legend(title='Attrition')
plt.show()

# Visualisasi hubungan antara Gender dan Attrition
plt.figure(figsize=(10, 6))
sns.countplot(x='Age', hue='Attrition', data=df)
plt.title('Attrition by Age')
plt.xlabel('Age')
plt.ylabel('Count')
plt.legend(title='Attrition')
plt.show()

# Visualisasi hubungan antara Gender dan Attrition
plt.figure(figsize=(10, 6))
sns.countplot(x='Department', hue='Attrition', data=df)
plt.title('Attrition by Department')
plt.xlabel('Department')
plt.ylabel('Count')
plt.legend(title='Attrition')
plt.show()

# Visualisasi hubungan antara Gender dan Attrition
plt.figure(figsize=(10, 6))
sns.countplot(x='JobInvolvement', hue='Attrition', data=df)
plt.title('Attrition by JobInvolvement')
plt.xlabel('JobInvolvement')
plt.ylabel('Count')
plt.legend(title='Attrition')
plt.show()

"""## Deployment"""

save_model(best_model, 'best_model_employee')
